--DROP TABLE IF EXISTS users, requests, items, bookings, comments CASCADE;
DROP ALL OBJECTS;

CREATE TABLE IF NOT EXISTS USERS
(
    USER_ID    BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    USER_NAME  VARCHAR(100) NOT NULL,
    USER_EMAIL VARCHAR(150) NOT NULL,
    CONSTRAINT UQ_USER_EMAIL UNIQUE (USER_EMAIL)
);

CREATE TABLE IF NOT EXISTS REQUESTS
(
    REQUEST_ID          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    REQUEST_DESCRIPTION VARCHAR(500)                NOT NULL,
    REQUESTER_ID        BIGINT                      NOT NULL,
    CREATE_DATE         TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT fk_requests_to_users FOREIGN KEY (REQUESTER_ID) REFERENCES users (USER_ID)
);

CREATE TABLE IF NOT EXISTS ITEMS
(
    ITEM_ID          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ITEM_NAME        VARCHAR(250)  NOT NULL,
    ITEM_DESCRIPTION VARCHAR(2000) NOT NULL,
    IS_AVAILABLE     BOOLEAN       NOT NULL,
    OWNER_ID         BIGINT        NOT NULL,
    REQUEST_ID       BIGINT,
    CONSTRAINT fk_items_to_users FOREIGN KEY (OWNER_ID) REFERENCES users (USER_ID),
    CONSTRAINT fk_items_to_requests FOREIGN KEY (request_id) REFERENCES requests (request_id)
);

CREATE TABLE IF NOT EXISTS BOOKINGS
(
    BOOKING_ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    START_DATE TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    END_DATE   TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    ITEM_ID    BIGINT                      NOT NULL,
    BOOKER_ID  BIGINT                      NOT NULL,
    STATUS     VARCHAR(50)                 NOT NULL,
    CONSTRAINT fk_bookings_to_items FOREIGN KEY (item_id) REFERENCES items (ITEM_id),
    CONSTRAINT fk_bookings_to_users FOREIGN KEY (booker_id) REFERENCES users (USER_id),
    CONSTRAINT constr_status CHECK (status IN ('WAITING', 'APPROVED', 'REJECTED', 'CANCELED'))
);

CREATE TABLE IF NOT EXISTS COMMENTS
(
    COMMENT_ID   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    TEXT_COMMENT VARCHAR(512)                NOT NULL,
    ITEM_ID      BIGINT                      NOT NULL,
    AUTHOR_ID    BIGINT                      NOT NULL,
    CREATE_DATE  TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT fk_comments_to_items FOREIGN KEY (item_id) REFERENCES items (ITEM_id),
    CONSTRAINT fk_comments_to_users FOREIGN KEY (author_id) REFERENCES users (USER_id)
);



